-- Load Kavo UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua", true))()

-- Create the UI Window
local Window = Library.CreateLib("Unnamed Enhancements", "DarkTheme")

-- Create Tabs
local MainTab = Window:NewTab("Main")
local VisualsTab = Window:NewTab("Visuals")
local TargetingTab = Window:NewTab("Targeting")
local ExploitsTab = Window:NewTab("Exploits")
local GunModsTab = Window:NewTab("Gun Mods")

-- ESP Configuration
getgenv().espEnabled = false
getgenv().espColor = Color3.new(1, 1, 1)
getgenv().nameESPEnabled = false
getgenv().nameColor = Color3.new(1, 1, 1)
getgenv().nameDisplayMode = "Username"
getgenv().nameTextSize = 14
getgenv().maxDistance = 1000

-- ESP Storage
local espDrawings = {}
local espConnections = {}

-- Function to create ESP for a player
local function createESPForPlayer(player)
    if player == game.Players.LocalPlayer then return end

    local drawings = {
        topLine = Drawing.new("Line"),
        bottomLine = Drawing.new("Line"),
        leftLine = Drawing.new("Line"),
        rightLine = Drawing.new("Line"),
        nameTag = Drawing.new("Text")
    }
    
    for _, drawing in pairs(drawings) do
        drawing.Visible = false
    end
    
    drawings.nameTag.Outline = true
    drawings.nameTag.Font = 2
    drawings.nameTag.Center = false
    espDrawings[player] = drawings

    local connection
    connection = game:GetService("RunService").Heartbeat:Connect(function()
        if not getgenv().espEnabled then
            for _, drawing in pairs(drawings) do
                drawing.Visible = false
            end
            return
        end

        if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
            for _, drawing in pairs(drawings) do
                drawing.Visible = false
            end
            return
        end

        local hrp = player.Character:FindFirstChild("HumanoidRootPart")
        local head = player.Character:FindFirstChild("Head")
        local camera = workspace.CurrentCamera
        local distance = (hrp.Position - camera.CFrame.Position).Magnitude
        
        if distance > getgenv().maxDistance then
            for _, drawing in pairs(drawings) do
                drawing.Visible = false
            end
            return
        end
        
        local screenPos, onScreen = camera:WorldToViewportPoint(hrp.Position)
        if onScreen then
            local headPos = camera:WorldToViewportPoint(head.Position)
            drawings.nameTag.Position = Vector2.new(headPos.X, headPos.Y - 50)
            drawings.nameTag.Text = getgenv().nameDisplayMode == "Username" and player.Name or player.DisplayName
            drawings.nameTag.Color = getgenv().nameColor
            drawings.nameTag.Size = getgenv().nameTextSize
            drawings.nameTag.Visible = getgenv().nameESPEnabled and getgenv().espEnabled
        else
            for _, drawing in pairs(drawings) do
                drawing.Visible = false
            end
        end
    end)
    
    espConnections[player] = connection
end

for _, player in pairs(game.Players:GetPlayers()) do
    createESPForPlayer(player)
end

game.Players.PlayerAdded:Connect(createESPForPlayer)

-- ESP Settings UI
local VisualsSection = VisualsTab:NewSection("ESP")
VisualsSection:NewToggle("Enable ESP", "Toggles ESP", function(state)
    getgenv().espEnabled = state
end)

VisualsSection:NewToggle("Enable Name ESP", "Toggles Name ESP", function(state)
    getgenv().nameESPEnabled = state
end)

VisualsSection:NewColorPicker("ESP Color", "Change ESP Box Color", Color3.new(1, 1, 1), function(color)
    getgenv().espColor = color
end)

VisualsSection:NewColorPicker("Name ESP Color", "Change Name ESP Color", Color3.new(1, 1, 1), function(color)
    getgenv().nameColor = color
end)

-- Targeting System
local selectedPlayer = nil
local TargetingSection = TargetingTab:NewSection("Targeting")

local playerDropdown = TargetingSection:NewDropdown("Select Player", "Choose a player to teleport to", {}, function(selected)
    selectedPlayer = selected
end)

TargetingSection:NewButton("Teleport", "Teleport to selected player", function()
    if selectedPlayer then
        local player = game.Players:FindFirstChild(selectedPlayer)
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local localChar = game.Players.LocalPlayer.Character
            if localChar and localChar:FindFirstChild("HumanoidRootPart") then
                localChar.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
            end
        end
    end
end)

local function updatePlayerList()
    local players = {}
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            table.insert(players, player.Name)
        end
    end
    playerDropdown:Refresh(players, true)
end

game.Players.PlayerAdded:Connect(updatePlayerList)
game.Players.PlayerRemoving:Connect(updatePlayerList)
updatePlayerList()
-- Save When Low HP Feature (Fixed)
local HealthMonitorEnabled = false
local LocalPlayer = game.Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")
local originalCFrame
local safeLocation = CFrame.new(0, 1000, 0) -- Safe teleport location

-- Function to reattach Humanoid and RootPart when respawning
local function refreshCharacter()
    Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    Humanoid = Character:WaitForChild("Humanoid")
    RootPart = Character:WaitForChild("HumanoidRootPart")

    -- Reapply health monitoring on respawn
    if HealthMonitorEnabled then
        monitorHealth()
    end
end

-- Function to teleport based on health
local function monitorHealth()
    if not Humanoid then return end

    -- Listen for health changes
    Humanoid.HealthChanged:Connect(function(newHealth)
        if HealthMonitorEnabled and RootPart then
            if newHealth <= 27 then
                if not originalCFrame then
                    originalCFrame = RootPart.CFrame -- Save position
                end
                RootPart.CFrame = safeLocation
            elseif newHealth >= 30 and originalCFrame then
                RootPart.CFrame = originalCFrame -- Restore position
                originalCFrame = nil
            end
        end
    end)
end

-- ðŸŒŸ ADDING IT TO EXPLOITS TAB ðŸŒŸ
local ExploitsSection = ExploitsTab:NewSection("Character Mods") -- Keep existing section

ExploitsSection:NewToggle("Save When Low HP", "Teleports when HP is low", function(state)
    HealthMonitorEnabled = state
    if HealthMonitorEnabled then
        monitorHealth()
    end
end)

-- Handle character respawns
LocalPlayer.CharacterAdded:Connect(refreshCharacter)
-- ðŸŒŸ ADDING BODY LABEL FOR FORCEFIELD ðŸŒŸ
ExploitsSection:NewLabel("Body")

-- ForceField Body Toggle with Color Change
local forceFieldEnabled = false
local forceFieldColor = Color3.new(1, 1, 1) -- Default color (white)
local LocalPlayer = game:GetService("Players").LocalPlayer

-- Function to apply ForceField material and color to character
local function applyForceField(character)
    if character then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                part.Material = forceFieldEnabled and Enum.Material.ForceField or Enum.Material.Plastic
                part.Color = forceFieldColor
            end
        end
    end
end

-- Toggle for ForceField
ExploitsSection:NewToggle("ForceField Body", "Makes your body look like a forcefield", function(state)
    forceFieldEnabled = state
    applyForceField(LocalPlayer.Character)
end)

-- Color Picker for ForceField
ExploitsSection:NewColorPicker("ForceField Color", "Change the ForceField color", Color3.new(1, 1, 1), function(color)
    forceFieldColor = color
    applyForceField(LocalPlayer.Character)
end)

-- Apply ForceField on character respawn
LocalPlayer.CharacterAdded:Connect(function(character)
    character:WaitForChild("HumanoidRootPart") -- Wait for character to fully load
    if forceFieldEnabled then
        applyForceField(character)
    end
end)
-- ðŸŒŸ GLOBAL VARIABLES ðŸŒŸ --
getgenv().orbitStompEnabled = false
getgenv().orbitSpeed = 5  
getgenv().orbitRadius = 10  
getgenv().orbitColor = Color3.fromRGB(255, 255, 255)  

-- ðŸŒŸ CREATE ORBIT CIRCLE (2D DRAWING) ðŸŒŸ --
local orbitCircle = Drawing.new("Circle")
orbitCircle.Visible = false
orbitCircle.Transparency = 1
orbitCircle.Color = getgenv().orbitColor
orbitCircle.Thickness = 2
orbitCircle.Radius = 30  

-- ðŸŒŸ FUNCTION TO ORBIT TARGET ðŸŒŸ --
local function orbitTarget(target)
    local player = game.Players.LocalPlayer
    local camera = game.Workspace.CurrentCamera
    local character = player.Character or player.CharacterAdded:Wait()
    local root = character:FindFirstChild("HumanoidRootPart")
    local targetHumanoid = target:FindFirstChildOfClass("Humanoid")

    if not root or not target or not target:FindFirstChild("HumanoidRootPart") or not targetHumanoid then
        warn("[Orbit]: ERROR - Invalid target or missing Humanoid!")
        return
    end

    -- Stop orbit if player or target dies
    local function stopOrbit()
        getgenv().orbitStompEnabled = false
        orbitCircle.Visible = false
        root.Velocity = Vector3.new(0, 0, 0)  -- Stops movement instantly
        root.CFrame = root.CFrame  -- Reset character rotation
        warn("[Orbit]: Stopping orbit.")
    end

    character:FindFirstChildOfClass("Humanoid").Died:Connect(stopOrbit)
    targetHumanoid.Died:Connect(stopOrbit)

    local angle = 0
    orbitCircle.Visible = true  

    while getgenv().orbitStompEnabled and target and target:FindFirstChild("HumanoidRootPart") and targetHumanoid.Health > 0 do
        task.wait(0.01)  -- **Faster updates for smoother motion**

        local targetPos = target.HumanoidRootPart.Position
        angle = angle + (getgenv().orbitSpeed / (getgenv().orbitRadius * 2))  

        local newX = targetPos.X + math.cos(angle) * getgenv().orbitRadius
        local newZ = targetPos.Z + math.sin(angle) * getgenv().orbitRadius

        -- **Smoother movement**  
        local smoothPos = root.Position:Lerp(Vector3.new(newX, targetPos.Y, newZ), 0.2)  
        root.CFrame = CFrame.lookAt(smoothPos, targetPos)  

        -- **Update 2D Circle Position**
        local screenPos, onScreen = camera:WorldToViewportPoint(targetPos + Vector3.new(0, 3, 0))

        if onScreen then
            orbitCircle.Position = Vector2.new(screenPos.X, screenPos.Y)
            orbitCircle.Visible = true
        else
            orbitCircle.Visible = false  
        end

        -- **Apply new settings dynamically**
        orbitCircle.Color = getgenv().orbitColor
        orbitCircle.Radius = getgenv().orbitRadius * 2  

        -- **Check if orbit is disabled mid-loop**
        if not getgenv().orbitStompEnabled then
            stopOrbit()
            return
        end
    end

    -- **Ensure cleanup when stopping**
    stopOrbit()
end

-- ðŸŒŸ ADD UI ELEMENTS ðŸŒŸ --
local MainSection = MainTab:NewSection("Orbit")

MainSection:NewToggle("Enable Orbit Stomp", "Starts orbiting around the target", function(state)
    getgenv().orbitStompEnabled = state

    if state then
        local player = game.Players.LocalPlayer
        local mouse = player:GetMouse()
        local target = mouse.Target and mouse.Target.Parent

        if target and target:IsA("Model") and target:FindFirstChild("HumanoidRootPart") then
            task.spawn(function()
                orbitTarget(target)
            end)
        else
            warn("[Orbit]: No valid target selected.")
            getgenv().orbitStompEnabled = false
        end
    else
        orbitCircle.Visible = false
    end
end)

MainSection:NewSlider("Orbit Speed", "Adjusts the orbit speed", 1, 50, function(value)
    getgenv().orbitSpeed = value / 5  
end)

MainSection:NewSlider("Orbit Radius", "Adjusts the orbit radius", 1, 50, function(value)
    if value < 1 then 
        getgenv().orbitRadius = 1  -- Prevents zero radius issue
    else
        getgenv().orbitRadius = value
    end
end)

MainSection:NewColorPicker("Orbit Circle Color", "Change the orbit circle color", Color3.new(1, 1, 1), function(color)
    getgenv().orbitColor = color
    orbitCircle.Color = color
end)

-- ðŸŒŸ ADD KEYBIND TO TOGGLE ORBIT ðŸŒŸ --
local KeybindSection = MainTab:NewSection("Keybinds")

KeybindSection:NewKeybind("Toggle Orbit", "Press a key to toggle orbiting", Enum.KeyCode.E, function()
    getgenv().orbitStompEnabled = not getgenv().orbitStompEnabled

    if getgenv().orbitStompEnabled then
        local player = game.Players.LocalPlayer
        local mouse = player:GetMouse()
        local target = mouse.Target and mouse.Target.Parent

        if target and target:IsA("Model") and target:FindFirstChild("HumanoidRootPart") then
            task.spawn(function()
                orbitTarget(target)
            end)
        else
            warn("[Orbit]: No valid target selected.")
            getgenv().orbitStompEnabled = false
        end
    else
        orbitCircle.Visible = false
    end
end)
